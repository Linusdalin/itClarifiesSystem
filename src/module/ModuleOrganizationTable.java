package module;

import risk.*;
import contractManagement.*;
import classification.*;
import userManagement.*;
import project.*;
import versioning.*;
import actions.*;
import overviewExport.*;
import module.*;
import search.*;
import crossReference.*;
import reclassification.*;
import dataRepresentation.*;
import databaseLayer.DBKeyInterface;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import log.PukkaLogger;
import pukkaBO.exceptions.BackOfficeException;
import pukkaBO.condition.*;
import pukkaBO.database.*;

import pukkaBO.acs.*;

/********************************************************
 *
 *    ModuleOrganization - Data Table
 *    Automatically generated file by GenerateTable.java
 *
 *
 */

public class ModuleOrganizationTable extends DataTable implements DataTableInterface{

    private static final String TITLE = "Module Organization Visibility";
    public static final String TABLE = "ModuleOrganization";
    private static final String DESCRIPTION = "Which organization can access which modules";

    public enum Columns {Name, Timestamp, Organization, Module, Owner, }

    private static final ColumnStructureInterface[] DATA = new ColumnStructureInterface[] {

            new StringColumn("Name", DataColumn.noFormatting),
            new TimeStampColumn("Timestamp", DataColumn.noFormatting),
            new ReferenceColumn("Organization", DataColumn.noFormatting, new TableReference("Organization", "Name")),
            new ReferenceColumn("Module", DataColumn.noFormatting, new TableReference("Module", "Name")),
            new ReferenceColumn("Owner", DataColumn.noFormatting, new TableReference("PortalUser", "Name")),
    };

    private static final ModuleOrganization associatedObject = new ModuleOrganization();
    public ModuleOrganizationTable(){

        init(DATA, associatedObject, TABLE, TITLE, DESCRIPTION, DefaultValues, TestValues);
         /* No name column set for table. Using default ( 1 ) */
         // Not set as external
        // Not a constant table
    }

    public ModuleOrganizationTable(ConditionInterface condition){

        this();
        try{

            values = load(condition);
        }
        catch(BackOfficeException e){

            System.out.println("Error loading table values " + e.narration);
        }

    }
    private static final String[][] DefaultValues = {




    };
    private static final String[][] TestValues = {

          {"Contracting", "2014-01-01", "demo.org", "Contracting", "itClarifies", "system"},
          {"Test", "2014-01-01", "demo.org", "Test", "admin", "system"},



    };

    @Override
    public void clearConstantCache(){

        ModuleOrganization.clearConstantCache();
    }

    /* Code below this point will not be replaced when regenerating the file*/

    /*__endAutoGenerated*/



}
