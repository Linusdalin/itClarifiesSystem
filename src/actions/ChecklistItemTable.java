package actions;

import risk.*;
import contractManagement.*;
import classification.*;
import userManagement.*;
import project.*;
import versioning.*;
import actions.*;
import overviewExport.*;
import module.*;
import search.*;
import crossReference.*;
import reclassification.*;
import dataRepresentation.*;
import databaseLayer.DBKeyInterface;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import log.PukkaLogger;
import pukkaBO.exceptions.BackOfficeException;
import pukkaBO.condition.*;
import pukkaBO.database.*;

import pukkaBO.acs.*;

/********************************************************
 *
 *    ChecklistItem - Data Table
 *    Automatically generated file by GenerateTable.java
 *
 *
 */

public class ChecklistItemTable extends DataTable implements DataTableInterface{

    private static final String TITLE = "Checklist Item";
    public static final String TABLE = "ChecklistItem";
    private static final String DESCRIPTION = "Checklist item with status";

    public enum Columns {Identifier, Parent, Name, Description, Comment, Checklist, Source, Completion, Project, ConformanceTag, ContextTag, Status, Completed, }

    private static final ColumnStructureInterface[] DATA = new ColumnStructureInterface[] {

            new IntColumn("Identifier", DataColumn.numberColumn),
            new IntColumn("Parent", DataColumn.numberColumn),
            new TextColumn("Name", DataColumn.noFormatting),
            new TextColumn("Description", DataColumn.wideColumn),
            new BlobColumn("Comment", DataColumn.wideColumn),
            new ReferenceColumn("Checklist", DataColumn.noFormatting, new TableReference("Checklist", "Name")),
            new ReferenceColumn("Source", DataColumn.noFormatting, new TableReference("ContractFragment", "Name")),
            new ReferenceColumn("Completion", DataColumn.noFormatting, new TableReference("ContractFragment", "Name")),
            new ReferenceColumn("Project", DataColumn.narrowColumn, new TableReference("Project", "Name")),
            new TextColumn("ConformanceTag", DataColumn.wideColumn),
            new TextColumn("ContextTag", DataColumn.wideColumn),
            new ConstantColumn("Status", DataColumn.narrowColumn, new TableReference("ActionStatus", "Name")),
            new DateColumn("Completed", DataColumn.noFormatting),
    };

    private static final ChecklistItem associatedObject = new ChecklistItem();
    public ChecklistItemTable(){

        init(DATA, associatedObject, TABLE, TITLE, DESCRIPTION, DefaultValues, TestValues);
         /* No name column set for table. Using default ( 1 ) */
         // Not set as external
        // Not a constant table
    }

    public ChecklistItemTable(ConditionInterface condition){

        this();
        try{

            values = load(condition);
        }
        catch(BackOfficeException e){

            System.out.println("Error loading table values " + e.narration);
        }

    }
    private static final String[][] DefaultValues = {




    };
    private static final String[][] TestValues = {

          {"1", "0", "Item", "This is the checklist item description", "This is a comment", "DemoChecklist", "first fragment", "first fragment", "Demo", "#CUSTOM1", "#DATE", "In Progress", "2014-10-10", "system"},
          {"2", "1", "Sub Item", "This is the child description", "This is a comment to the child", "DemoChecklist", "first fragment", "first fragment", "Demo", "#CUSTOM2", "#DATE", "In Progress", "2014-10-10", "system"},



    };

    @Override
    public void clearConstantCache(){

        ChecklistItem.clearConstantCache();
    }

    /* Code below this point will not be replaced when regenerating the file*/

    /*__endAutoGenerated*/



}
