package overviewExport;

import risk.*;
import contractManagement.*;
import classification.*;
import userManagement.*;
import project.*;
import versioning.*;
import actions.*;
import overviewExport.*;
import module.*;
import search.*;
import crossReference.*;
import reclassification.*;
import dataRepresentation.*;
import databaseLayer.DBKeyInterface;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import log.PukkaLogger;
import pukkaBO.exceptions.BackOfficeException;
import pukkaBO.condition.*;
import pukkaBO.database.*;

import pukkaBO.acs.*;

/********************************************************
 *
 *    ExtractionStatus - Data Table
 *    Automatically generated file by GenerateTable.java
 *
 *
 */

public class ExtractionStatusTable extends DataTable implements DataTableInterface{

    private static final String TITLE = "Extraction Status";
    public static final String TABLE = "ExtractionStatus";
    private static final String DESCRIPTION = "Cached extractions";

    public enum Columns {Name, Date, User, Project, Comment, Status, Description, Tags, }

    private static final ColumnStructureInterface[] DATA = new ColumnStructureInterface[] {

            new StringColumn("Name", DataColumn.noFormatting),
            new DateColumn("Date", DataColumn.noFormatting),
            new ReferenceColumn("User", DataColumn.noFormatting, new TableReference("PortalUser", "Name")),
            new ReferenceColumn("Project", DataColumn.noFormatting, new TableReference("Project", "Name")),
            new TextColumn("Comment", DataColumn.noFormatting),
            new ConstantColumn("Status", DataColumn.narrowColumn, new TableReference("ExtractionState", "Name")),
            new TextColumn("Description", DataColumn.noFormatting),
            new TextColumn("Tags", DataColumn.noFormatting),
    };

    private static final ExtractionStatus associatedObject = new ExtractionStatus();
    public ExtractionStatusTable(){

        init(DATA, associatedObject, TABLE, TITLE, DESCRIPTION, DefaultValues, TestValues);
         /* No name column set for table. Using default ( 1 ) */
         // Not set as external
        // Not a constant table
    }

    public ExtractionStatusTable(ConditionInterface condition){

        this();
        try{

            values = load(condition);
        }
        catch(BackOfficeException e){

            System.out.println("Error loading table values " + e.narration);
        }

    }
    private static final String[][] DefaultValues = {




    };
    private static final String[][] TestValues = {




    };

    @Override
    public void clearConstantCache(){

        ExtractionStatus.clearConstantCache();
    }

    /* Code below this point will not be replaced when regenerating the file*/

    /*__endAutoGenerated*/



}
